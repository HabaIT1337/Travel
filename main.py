from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ConversationHandler, ContextTypes, filters

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —ç—Ç–∞–ø–æ–≤ –¥–∏–∞–ª–æ–≥–∞
MAIN_MENU, SELECT_TRIP_TYPE, BOOKING_TRIP, BOOKING_PACKAGE, NAME, PHONE, DATE, DESTINATION, CONTACT_PHONE, CONFIRMATION = range(
    10)

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
admin_chat_id = '1387587155'  # ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
dispatcher_contact = '@eduardhabib'  # –ö–æ–Ω—Ç–∞–∫—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
seats_available = 20  # –ù–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Ä—à—Ä—É—Ç–∞—Ö —Å –æ—Å—Ç–∞–Ω–æ–≤–∫–∞–º–∏, –≤—Ä–µ–º–µ–Ω–µ–º –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å—é
routes_info = {
    "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä - –î–æ–º–±–∞–π": """
üöê –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä - –î–æ–º–±–∞–π  
‚è∞ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: 6:00 –∏–ª–∏ 16:00  
üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å:
- üèô –ê—Ä–º–∞–≤–∏—Ä ‚Äî *1000 ‚ÇΩ* 
- üèô –ö–æ—á—É–±–µ–µ–≤—Å–∫–æ–µ ‚Äî *1500 ‚ÇΩ* 
- üèô –ò–≤–∞–Ω–æ–≤—Å–∫–∞—è ‚Äî *1500 ‚ÇΩ* 
- üèô –ß–µ—Ä–∫–µ—Å—Å–∫ ‚Äî *1500 ‚ÇΩ* 
- üèô –ö–∞—Ä–∞—á–∞–µ–≤—Å–∫ ‚Äî *2000 ‚ÇΩ* 
- üèû –¢–µ–±–µ—Ä–¥–∞ ‚Äî *2500 ‚ÇΩ* 
- üèî –î–æ–º–±–∞–π ‚Äî *2500 ‚ÇΩ* 
    """,
    "–î–æ–º–±–∞–π - –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä": """
üöê –î–æ–º–±–∞–π - –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä  
‚è∞ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: 14:30  
üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: —Ç–∞–∫–∏–µ –∂–µ, –∫–∞–∫ –∏ –≤ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä - –î–æ–º–±–∞–π".
    """,
    "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä - –ê—Ä—Ö—ã–∑": """
üöê –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä - –ê—Ä—Ö—ã–∑  
‚è∞ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: 6:00 –∏–ª–∏ 16:00  
üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å:
- üèô –ú–∞–π–∫–æ–ø ‚Äî *800 ‚ÇΩ*  
- üèô –õ–∞–±–∏–Ω—Å–∫ ‚Äî *1000 ‚ÇΩ*  
- üèô –ú–æ—Å—Ç–æ–≤—Å–∫–æ–π ‚Äî *1200 ‚ÇΩ*  
- üèô –ü—Å–µ–±–∞–π ‚Äî *1500 ‚ÇΩ*  
- üèô –ö—É—Ä–¥–∂–∏–Ω–æ–≤–æ ‚Äî *1500 ‚ÇΩ*  
- üèô –ü—Ä–µ–≥—Ä–∞–¥–Ω–∞—è ‚Äî *1800 ‚ÇΩ*  
- üèô –°—Ç–æ—Ä–æ–∂–µ–≤–∞—è ‚Äî *2000 ‚ÇΩ*  
- üèû –ó–µ–ª–µ–Ω—á—É–∫—Å–∫–∞—è ‚Äî *2000 ‚ÇΩ*  
- üèû –ê—Ä—Ö—ã–∑ ‚Äî *2500 ‚ÇΩ*  
    """,
    "–ê—Ä—Ö—ã–∑ - –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä": """
üöê –ê—Ä—Ö—ã–∑ - –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä  
‚è∞ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: 14:00  
üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: —Ç–∞–∫–∏–µ –∂–µ, –∫–∞–∫ –∏ –≤ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä - –ê—Ä—Ö—ã–∑".
    """
}


# –ù–∞—á–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∞—è –∫–Ω–æ–ø–∫—É "–ü–æ–µ—Ö–∞–ª–∏! üöÄ"
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    reply_keyboard = [[KeyboardButton("–ü–æ–µ—Ö–∞–ª–∏! üöÄ")]]

    await update.message.reply_text(
        "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ! üöÄ",
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, resize_keyboard=True)
    )
    return SELECT_TRIP_TYPE


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –∏ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —É—Å–ª—É–≥–∏
async def select_trip_type(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    reply_keyboard = [["üöó –ü–æ–µ–∑–¥–∫–∞", "üì¶ –ü–æ—Å—ã–ª–∫–∞", "üõ† –ü–æ–¥–¥–µ—Ä–∂–∫–∞"]]
    await update.message.reply_text(
        "üöó *–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–µ–∑–¥–æ–∫ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å—ã–ª–æ–∫ —Å –ª—ë–≥–∫–æ—Å—Ç—å—é!* üöó\n\n"
        "–ù–∞—à –±–æ—Ç —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –≤–∞—à–∏ –ø–æ–µ–∑–¥–∫–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–¥–æ–±–Ω—ã–º–∏ –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–º–∏. –í—Å—ë, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ ‚Äî –≤—ã–±—Ä–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç –∏ –¥–∞—Ç—É, –∞ –æ—Å—Ç–∞–ª—å–Ω–æ–µ –º—ã –±–µ—Ä—ë–º –Ω–∞ —Å–µ–±—è! üòé\n\n"
        "üìç *–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã:*\n\n"
        "- –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä - –î–æ–º–±–∞–π üèî\n"
        "- –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä - –ê—Ä—Ö—ã–∑ üèû\n"
        "–ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö üõ£\n\n"
        "üì¶ –¢–∞–∫–∂–µ —Å –Ω–∞–º–∏ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å—ã–ª–∫—É: –±—ã—Å—Ç—Ä–æ –∏ –Ω–∞–¥—ë–∂–Ω–æ! üéÅ\n\n"
        "–ù–∞—á–Ω–∏—Ç–µ —Å –∫–Ω–æ–ø–∫–∏ ¬´–ü–æ–µ—Ö–∞–ª–∏! üöÄ¬ª, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é –ø–æ–µ–∑–¥–∫—É –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ª—ë–≥–∫–∏–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è! üöå‚ú®",
        parse_mode="Markdown",
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, resize_keyboard=True)
    )
    return MAIN_MENU


# –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–µ–µ –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    user_choice = update.message.text
    if user_choice == "üöó –ü–æ–µ–∑–¥–∫–∞":
        route_options = [[f"üöç {route}"] for route in routes_info.keys()] + [["üîô –ù–∞–∑–∞–¥"]]
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä—à—Ä—É—Ç:",
            reply_markup=ReplyKeyboardMarkup(route_options, resize_keyboard=True)
        )
        return BOOKING_TRIP
    elif user_choice == "üì¶ –ü–æ—Å—ã–ª–∫–∞":
        context.user_data["route_type"] = "–ü–æ—Å—ã–ª–∫–∞"
        await update.message.reply_text("–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫—É –ø–æ—Å—ã–ª–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è –¥–ª—è –Ω–∞—á–∞–ª–∞.",
                                        reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], resize_keyboard=True))
        return BOOKING_PACKAGE
    elif user_choice == "üõ† –ü–æ–¥–¥–µ—Ä–∂–∫–∞":
        await update.message.reply_text(
            f"–°–≤—è–∑–∞—Ç—å—Å—è —Å –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–º –º–æ–∂–Ω–æ –ø–æ —ç—Ç–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É: {dispatcher_contact}",
            reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], resize_keyboard=True)
        )
        return MAIN_MENU
    elif user_choice == "üîô –ù–∞–∑–∞–¥":
        await select_trip_type(update, context)
        return MAIN_MENU
    else:
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø—Ü–∏–π: –ü–æ–µ–∑–¥–∫–∞, –ü–æ—Å—ã–ª–∫–∞, –∏–ª–∏ –ü–æ–¥–¥–µ—Ä–∂–∫–∞.",
            reply_markup=ReplyKeyboardMarkup([["üöó –ü–æ–µ–∑–¥–∫–∞", "üì¶ –ü–æ—Å—ã–ª–∫–∞", "üõ† –ü–æ–¥–¥–µ—Ä–∂–∫–∞"]], resize_keyboard=True)
        )
        return MAIN_MENU


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–µ–∑–¥–∫–∏
async def booking_trip(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    selected_route = update.message.text.replace("üöç ", "")
    context.user_data['route'] = selected_route
    await update.message.reply_text(
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –º–∞—Ä—à—Ä—É—Ç:\n\n{routes_info[selected_route]}\n\n–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –ø–æ–µ–∑–¥–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 15.10.2024).",
        parse_mode="Markdown",
        reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], resize_keyboard=True)
    )
    return DATE


# –ó–∞–ø—Ä–æ—Å –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–µ–∑–¥–∫–∏
async def date(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data['date'] = update.message.text
    times_options = [["6:00", "16:00"], ["üîô –ù–∞–∑–∞–¥"]]

    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:",
        reply_markup=ReplyKeyboardMarkup(times_options, resize_keyboard=True)
    )
    return DESTINATION


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–µ—á–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
async def destination(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data['time'] = update.message.text
    if context.user_data.get("route_type") == "–ü–æ—Å—ã–ª–∫–∞":
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –¥–ª—è –ø–æ—Å—ã–ª–∫–∏.",
                                        reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], resize_keyboard=True))
        return CONTACT_PHONE
    else:
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è.",
                                        reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], resize_keyboard=True))
        return NAME


# –ó–∞–ø—Ä–æ—Å –∏–º–µ–Ω–∏
async def name(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data['name'] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.",
                                    reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], resize_keyboard=True))
    return PHONE


# –ó–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
async def contact_phone(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data['contact_phone'] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.",
                                    reply_markup=ReplyKeyboardMarkup([["üîô –ù–∞–∑–∞–¥"]], resize_keyboard=True))
    return PHONE


# –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
async def phone(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data['phone'] = update.message.text
    selected_route = context.user_data['route']
    global seats_available

    if seats_available > 0:
        seats_available -= 1
        booking_info = (
            f"–ù–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ!\n"
            f"–ú–∞—Ä—à—Ä—É—Ç: {selected_route}\n"
            f"–î–∞—Ç–∞: {context.user_data['date']} –≤ {context.user_data['time']}\n"
            f"–ò–º—è: {context.user_data['name']}\n"
            f"–¢–µ–ª–µ—Ñ–æ–Ω: {context.user_data['phone']}\n"
            f"–ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è –≤—Å—Ç—Ä–µ—á–∏ –ø–æ—Å—ã–ª–∫–∏: {context.user_data.get('contact_phone', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
            f"–û—Å—Ç–∞–ª–æ—Å—å –º–µ—Å—Ç: {seats_available}"
        )

        await context.bot.send_message(chat_id=admin_chat_id, text=booking_info)
        await update.message.reply_text("–í–∞—à–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.")
    else:
        await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—Å–µ –º–µ—Å—Ç–∞ –∑–∞–Ω—è—Ç—ã.")

    return MAIN_MENU


# –§—É–Ω–∫—Ü–∏—è –æ—Ç–º–µ–Ω—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
async def cancel_booking(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text("–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –Ω–∞–∂–º–∏—Ç–µ '–ü–æ–µ—Ö–∞–ª–∏!' üöÄ.")
    return MAIN_MENU


# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main() -> None:
    application = ApplicationBuilder().token("7984620054:AAH2NIHnC-c1IDW0_g2KY5iz-lQoBgUpNos").build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            MAIN_MENU: [MessageHandler(filters.TEXT & ~filters.COMMAND, main_menu)],
            SELECT_TRIP_TYPE: [MessageHandler(filters.TEXT & ~filters.COMMAND, select_trip_type)],
            BOOKING_TRIP: [MessageHandler(filters.TEXT & ~filters.COMMAND, booking_trip)],
            DATE: [MessageHandler(filters.TEXT & ~filters.COMMAND, date)],
            DESTINATION: [MessageHandler(filters.TEXT & ~filters.COMMAND, destination)],
            NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, name)],
            CONTACT_PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, contact_phone)],
            PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, phone)],
        },
        fallbacks=[CommandHandler("cancel", cancel_booking)],
    )

    application.add_handler(conv_handler)
    application.run_polling()


if __name__ == '__main__':
    main()












